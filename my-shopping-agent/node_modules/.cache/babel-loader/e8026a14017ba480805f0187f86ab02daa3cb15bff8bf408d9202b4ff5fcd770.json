{"ast":null,"code":"var _jsxFileName = \"D:\\\\Varun-Major\\\\my-shopping-agent\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { setAuthToken } from '../api/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [session, setSession] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      setSession(session);\n      setAuthToken(session === null || session === void 0 ? void 0 : session.access_token);\n      setLoading(false);\n    });\n\n    // Listen for auth changes\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n      setAuthToken(session === null || session === void 0 ? void 0 : session.access_token);\n      setLoading(false);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const signOut = async () => {\n    await supabase.auth.signOut();\n    setAuthToken(null);\n  };\n  const value = {\n    session,\n    loading,\n    signOut,\n    user: session === null || session === void 0 ? void 0 : session.user,\n    isAuthenticated: !!session\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"dkuVYdQvZEJ7aX3whq8i9qrSbuA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","supabase","setAuthToken","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","session","setSession","loading","setLoading","auth","getSession","then","data","access_token","subscription","onAuthStateChange","_event","unsubscribe","signOut","value","user","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/Varun-Major/my-shopping-agent/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { supabase } from '../supabaseClient';\r\nimport { setAuthToken } from '../api/client';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [session, setSession] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Get initial session\r\n    supabase.auth.getSession().then(({ data: { session } }) => {\r\n      setSession(session);\r\n      setAuthToken(session?.access_token);\r\n      setLoading(false);\r\n    });\r\n\r\n    // Listen for auth changes\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\r\n      (_event, session) => {\r\n        setSession(session);\r\n        setAuthToken(session?.access_token);\r\n        setLoading(false);\r\n      }\r\n    );\r\n\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  const signOut = async () => {\r\n    await supabase.auth.signOut();\r\n    setAuthToken(null);\r\n  };\r\n\r\n  const value = {\r\n    session,\r\n    loading,\r\n    signOut,\r\n    user: session?.user,\r\n    isAuthenticated: !!session\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,gBAAGR,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,SAASS,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACAE,QAAQ,CAACY,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC,IAAI,EAAE;QAAEP;MAAQ;IAAE,CAAC,KAAK;MACzDC,UAAU,CAACD,OAAO,CAAC;MACnBP,YAAY,CAACO,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEQ,YAAY,CAAC;MACnCL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;;IAEF;IACA,MAAM;MAAEI,IAAI,EAAE;QAAEE;MAAa;IAAE,CAAC,GAAGjB,QAAQ,CAACY,IAAI,CAACM,iBAAiB,CAChE,CAACC,MAAM,EAAEX,OAAO,KAAK;MACnBC,UAAU,CAACD,OAAO,CAAC;MACnBP,YAAY,CAACO,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEQ,YAAY,CAAC;MACnCL,UAAU,CAAC,KAAK,CAAC;IACnB,CACF,CAAC;IAED,OAAO,MAAMM,YAAY,CAACG,WAAW,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMrB,QAAQ,CAACY,IAAI,CAACS,OAAO,CAAC,CAAC;IAC7BpB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMqB,KAAK,GAAG;IACZd,OAAO;IACPE,OAAO;IACPW,OAAO;IACPE,IAAI,EAAEf,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEe,IAAI;IACnBC,eAAe,EAAE,CAAC,CAAChB;EACrB,CAAC;EAED,oBACEL,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACH,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EAChCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACtB,EAAA,CA1CeF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA4C5B,OAAO,MAAM0B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGpC,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAAC6B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}